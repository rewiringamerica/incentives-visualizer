/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
    "/api/v0/calculator": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * (Deprecated) Find eligible incentives
         * @deprecated
         * @description Compute incentives for which the user is eligible, given the criteria in the request parameters.
         */
        get: operations["calculator-get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v0/incentives": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * (Deprecated) List all incentives
         * @deprecated
         * @description List all available incentives, before applying eligibility criteria. Note that there will be duplicates with only subtle differences between eligibility tiers. Use the calculator endpoint to get de-duped incentives.
         */
        get: operations["incentives-get"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/calculator": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Find eligible incentives
         * @description Compute incentives for which the user is eligible, given the criteria in the request parameters.
         */
        get: operations["getCalculatedIncentives"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/utilities": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Find utilities by location
         * @description Returns electric and gas utilities that may serve the given location. Because the location is imprecise, and because utility service territories aren't precisely defined, there may be multiple results, including utilities that don't actually serve the given location.
         */
        get: operations["getUtilities"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/states": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get state rollout status
         * @description For each state and territory (and Washington, DC), return the development status of its state-, utility-, and local-level incentive data. (Note that federal-level incentive data is available regardless of location.)
         *
         *     The response's keys are two-letter state or territory codes, as [defined by the US Postal Service](https://pe.usps.com/text/pub28/28apb.htm). The response includes all 50 states, Washington DC, and the territories of Puerto Rico, Guam, American Samoa, the US Virgin Islands, and the Northern Mariana Islands.
         *
         *     In each key's value, the possible `status` properties are:
         *
         *     - `none`: state, local, and utility (SLU) incentives for the state are not in the API at all.
         *     - `beta`: SLU incentives have not been fully vetted, and will be returned from `/api/v1/calculator` only if the `include_beta_states` request parameter is true.
         *     - `launched`: SLU incentives are fully vetted and returned in the API.
         */
        get: operations["getStateStatus"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/incentives/programs": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get all programs by location
         * @description Returns all incentive programs by location and optionally, utility
         */
        get: operations["getProgramsForLocation"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
    "/api/v1/incentives": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        /**
         * Get incentives
         * @description Returns incentives, optionally filtered by state
         */
        get: operations["getIncentives"];
        put?: never;
        post?: never;
        delete?: never;
        options?: never;
        head?: never;
        patch?: never;
        trace?: never;
    };
}
export type webhooks = Record<string, never>;
export interface components {
    schemas: {
        /** Error */
        Error: {
            statusCode: number;
            error: string;
            message: string;
            /** @description If the error was related to a specific field in the request, it will be specified here. */
            field?: string;
        };
        /** WebsiteIncentive */
        WebsiteIncentive: {
            /** @enum {string} */
            type: "pos_rebate" | "tax_credit";
            /** @description The name of the incentive program, in English. */
            program: string;
            /** @description The name of the incentive program, in Spanish. */
            program_es: string;
            /** @description The equipment or project that this incentive is for, in English. */
            item: string;
            /** @description The equipment or project that this incentive is for, in Spanish. */
            item_es: string;
            /** @description A URL to more information, in English, about the equipment or project. */
            more_info_url: string;
            /** @description A URL to more information, in Spanish, about the equipment or project. */
            more_info_url_es: string;
            /** @description Depending on `amount_type`, either a dollar amount, or a number between 0 and 1 indicating a percentage. */
            amount: number;
            /**
             * @description The significance of the `amount` field.
             * @enum {string}
             */
            amount_type: "dollar_amount" | "percent" | "solar";
            /** @enum {string} */
            item_type: "pos_rebate" | "performance_rebate" | "tax_credit" | "solar_tax_credit" | "ev_charger_credit";
            owner_status: ("homeowner" | "renter")[];
            /** @description The four-digit year in which the incentive begins, or began, to be available. */
            start_date: number;
            /** @description The four-digit year in which the incentive stops, or stopped, being available. */
            end_date: number;
            /** @description Not used. */
            special_note?: string;
            /** @description A dollar amount that this incentive is typically worth. */
            representative_amount?: number;
            /**
             * @description The income level required for this incentive, expressed as a percentage of Area Median Income (AMI).
             * @enum {string|null}
             */
            ami_qualification?: "less_than_150_ami" | "less_than_80_ami" | "more_than_80_ami" | null;
            /** @description The maximum Adjusted Gross Income (AGI) to be eligible for this incentive. */
            agi_max_limit?: number;
            /** @description The minimum Adjusted Gross Income (AGI) to be eligible for this incentive. */
            agi_min_limit?: number;
            /**
             * @description Which tax filing statuses are eligible for this incentive.
             * @enum {string|null}
             */
            filing_status?: "hoh" | "joint" | "married_filing_separately" | "single" | "qualifying_widower_with_dependent_child" | null;
            eligible?: boolean;
            /** @description A 150 character (or shorter) display description for the incentive. */
            short_description?: string;
            /** @description Temporary more info URL to support internal RA consumer site until migration to V1 */
            more_info_url_internal?: string;
        };
        WebsiteCalculatorResponse: {
            is_under_80_ami: boolean;
            is_under_150_ami: boolean;
            is_over_150_ami: boolean;
            /** @description The max POS savings is $14,000 if you’re under 150% ami, otherwise 0 */
            pos_savings: number;
            /** @description You can’t save more than tax owed. Uses the lesser of tax owed vs tax savings. Residents of US territories are assumed to owe no federal income tax. */
            tax_savings: number;
            performance_rebate_savings: number;
            /** @description This estimate is based on energy costs in your state. It includes savings on both utility and gasoline bills if you switch to an electric vehicle and a heat pump for space and water heating. See our FAQ for more on how we estimate this number. */
            estimated_annual_savings: number;
            pos_rebate_incentives: components["schemas"]["WebsiteIncentive"][];
            tax_credit_incentives: components["schemas"]["WebsiteIncentive"][];
        };
        APIIncentive: {
            /** @description How a consumer receives value from this incentive.
             *
             *     - `rebate`: a post-purchase rebate.
             *     - `pos_rebate`: a "point-of-sale" rebate; an upfront discount.
             *     - `tax_credit`: a credit against federal or state taxes paid.
             *     - `account_credit`: a credit on the consumer's utility account.
             *     - `assistance_program`: no-cost products or services.
             *     - `performance_rebate`: a post-purchase rebate that depends on measured or modeled efficiency improvements.
             *     - `unknown`: something else. */
            payment_methods: ("rebate" | "pos_rebate" | "tax_credit" | "account_credit" | "assistance_program" | "performance_rebate" | "unknown")[];
            /**
             * @description The nature of the entity offering the incentive.
             * @enum {string}
             */
            authority_type: "federal" | "city" | "county" | "state" | "utility" | "gas_utility" | "other";
            /** @description The government agency, company, or organization that offers this incentive. This generally means the entity that the consumer will interact with to _claim the incentive_, as opposed to the entity that sets the program rules, or that provides funding. */
            authority?: string;
            /** @description Consumer-facing name of the program that this incentive is part of. If the program has no distinct brand name, this string will usually include the name of the offering authority as well. */
            program: string;
            /** @description A URL to the best available official source of information on this program. */
            program_url: string;
            /** @description A URL to supplemental information on the program, usually from a third party rather than the offering authority. Localized according to the `language` request parameter. */
            more_info_url?: string;
            /** @description Describes whether the incentive is currently on offer.       This field is independent of the `start_date` and `end_date` fields,       which relate to the time period when the incentive is available. For       example, this field may be `true` if the funding source for an       incentive has run out, even if the incentive is still in the middle of       its availability period. */
            paused?: boolean;
            /** @description What products or services the incentive can be used on. **NOTE**: we expect to add possible values to this field over time. Client code should gracefully handle unknown values it sees here. */
            items: ("air_sealing" | "air_to_water_heat_pump" | "attic_or_roof_insulation" | "basement_insulation" | "battery_storage_installation" | "central_air_conditioner" | "crawlspace_insulation" | "door_replacement" | "duct_replacement" | "duct_sealing" | "ducted_heat_pump" | "ductless_heat_pump" | "ebike" | "efficiency_rebates" | "electric_outdoor_equipment" | "electric_panel" | "electric_stove" | "electric_thermal_storage_and_slab" | "electric_vehicle_charger" | "electric_wiring" | "energy_audit" | "evaporative_cooler" | "floor_insulation" | "geothermal_heating_installation" | "heat_pump_clothes_dryer" | "heat_pump_water_heater" | "new_electric_vehicle" | "new_plugin_hybrid_vehicle" | "non_heat_pump_clothes_dryer" | "non_heat_pump_water_heater" | "other" | "other_heat_pump" | "other_insulation" | "other_weatherization" | "rooftop_solar_installation" | "smart_thermostat" | "used_electric_vehicle" | "used_plugin_hybrid_vehicle" | "wall_insulation" | "whole_house_fan" | "window_replacement")[];
            /** @description The amount of monetary value that a consumer can receive from this incentive.
             *
             *     This format does not capture the full range of possible incentive structures, which can be very complex and dependent on a wide range of factors. It is a simplification in many cases. There are three amount structures, distinguished by the `type` field:
             *
             *     - `dollar_amount`: a flat amount. This value is also used as a catchall for amount structures that don't fit into the other categories; in such cases, the aim is to at least capture the maximum value the incentive can have.
             *     - `dollars_per_unit`: an amount that scales with the size or capacity of the equipment.
             *     - `percent`: an amount that is a percentage of the cost of the product or service. */
            amount: {
                /**
                 * @description The structure of the amount.
                 * @enum {string}
                 */
                type: "dollar_amount" | "percent" | "dollars_per_unit";
                /** @description The dollar amount for `dollar_amount` and `dollars_per_unit` types, and a number between 0 and 1 inclusive for `percent` type (where 1 means 100%). */
                number: number;
                /** @description The maximum dollar amount the incentive can have. */
                maximum?: number;
                /** @description For non-flat amounts, an estimate of the incentive's typical value. */
                representative?: number;
                /**
                 * @description For `dollars_per_unit` type, the unit the amount depends on.
                 * @enum {string}
                 */
                unit?: "ton" | "kilowatt" | "watt" | "btuh10k" | "cfm50" | "square_foot" | "kilowatt_hour";
            };
            /** @description Whether the consumer must be a homeowner or renter (or either) to claim this incentive. */
            owner_status: ("homeowner" | "renter")[];
            /** @description The time period when the incentive began, or will begin, to be available. Format is similar to an ISO-8601 date, but with some modifications and additions. Examples:
             *
             *     - `2025`: incentive begins some time during that year.
             *     - `2025-03`: incentive begins some time during that month.
             *     - `2025-03-10`: incentive begins that day.
             *     - `2025H2`: incentive begins some time during that half-year.
             *     - `2025Q3`: incentive begins some time during that quarter. */
            start_date?: string;
            /** @description The date when the incentive stopped, or will stop, being available. Format is the same as for `start_date`. */
            end_date?: string;
            /** @description A short display description for the incentive, localized according to the `language` request parameter. English descriptions are 150 characters or less in almost all cases. May be slightly longer in other languages. Attempts to capture important data not expressed in other fields, such as required equipment specs, restrictions on existing home situation, etc. */
            short_description?: string;
        };
        APICalculatorResponse: {
            /** @description Whether the given household income is below the "80% of Area Median Income" level for the given household size and location. */
            is_under_80_ami: boolean;
            /** @description Whether the given household income is below the "150% of Area Median Income" level for the given household size and location. */
            is_under_150_ami: boolean;
            /** @description Whether the given household income is above the "150% of Area Median Income" level for the given household size and location. */
            is_over_150_ami: boolean;
            /** @description Information on the entities (government agencies, companies, other organizations) that offer incentives in this result set. */
            authorities: {
                [key: string]: {
                    name: string;
                    logo?: {
                        /** @description The URL to fetch the image from. */
                        src: string;
                        /** @description The image's width in pixels. */
                        width: number;
                        /** @description The image's height in pixels. */
                        height: number;
                    };
                };
            };
            /** @description Which sub-national sets of incentives were considered for eligibility. */
            coverage: {
                /** @description Two-letter state code. Determined from the "location" request parameter. */
                state: string | null;
                /** @description Utility ID, as passed in the "utility" request parameter. */
                utility: string | null;
            };
            /** @description The computed location of the request's "zip" or "address" parameter. */
            location: {
                /** @description The two-letter abbreviation for the state, district, or territory of the location submitted in the request. */
                state: string;
                /** @description The city name as determined by looking up the ZIP code in our database. */
                city?: string;
                /** @description The FIPS code of the county, as determined by looking up the ZIP code in our database. */
                county_fips?: string;
            };
            /** @description Information on organizations that assist in collecting, verifying, and maintaining incentive data included in this result set. */
            data_partners?: {
                [key: string]: {
                    name: string;
                    logo?: {
                        /** @description The URL to fetch the image from. */
                        src: string;
                        /** @description The image's width in pixels. */
                        width: number;
                        /** @description The image's height in pixels. */
                        height: number;
                    };
                };
            };
            incentives: components["schemas"]["APIIncentive"][];
        };
        APIProgramsResponse: {
            /** @description Information on the entities (government agencies, companies, other organizations) that offer programs in this result set. */
            authorities: {
                [key: string]: {
                    name: string;
                    logo?: {
                        /** @description The URL to fetch the image from. */
                        src: string;
                        /** @description The image's width in pixels. */
                        width: number;
                        /** @description The image's height in pixels. */
                        height: number;
                    };
                };
            };
            /** @description Which sub-national sets of incentives were considered for eligibility. */
            coverage: {
                /** @description Two-letter state code. Determined from the "location" request parameter. */
                state: string | null;
                /** @description Utility ID, as passed in the "utility" request parameter. */
                utility: string | null;
            };
            /** @description The computed location of the request's "zip" or "address" parameter. */
            location: {
                /** @description The two-letter abbreviation for the state, district, or territory of the location submitted in the request. */
                state: string;
                /** @description The city name as determined by looking up the ZIP code in our database. */
                city?: string;
                /** @description The FIPS code of the county, as determined by looking up the ZIP code in our database. */
                county_fips?: string;
            };
            /** @description A map of IDs to incentive program data. */
            programs: {
                [key: string]: {
                    /** @description Name of the program */
                    name: string;
                    /** @description URL to program information */
                    url: string;
                    /**
                     * @description Find programs offered by these types of authorities. If absent, programs from all types of authorities will be considered.
                     * @enum {string}
                     */
                    authority_type: "federal" | "city" | "county" | "state" | "utility" | "gas_utility" | "other";
                    /** @description The government agency, company, or organization that offers this program. This generally means the entity that the consumer will interact with to _claim the incentives offered by the program_, as opposed to the entity that sets the program rules, or that provides funding. */
                    authority?: string;
                    /** @description What products or services the program can be used on. **NOTE**: we expect to add possible values to this field over time. Client code should gracefully handle unknown values it sees here. */
                    items?: ("air_sealing" | "air_to_water_heat_pump" | "attic_or_roof_insulation" | "basement_insulation" | "battery_storage_installation" | "central_air_conditioner" | "crawlspace_insulation" | "door_replacement" | "duct_replacement" | "duct_sealing" | "ducted_heat_pump" | "ductless_heat_pump" | "ebike" | "efficiency_rebates" | "electric_outdoor_equipment" | "electric_panel" | "electric_stove" | "electric_thermal_storage_and_slab" | "electric_vehicle_charger" | "electric_wiring" | "energy_audit" | "evaporative_cooler" | "floor_insulation" | "geothermal_heating_installation" | "heat_pump_clothes_dryer" | "heat_pump_water_heater" | "new_electric_vehicle" | "new_plugin_hybrid_vehicle" | "non_heat_pump_clothes_dryer" | "non_heat_pump_water_heater" | "other" | "other_heat_pump" | "other_insulation" | "other_weatherization" | "rooftop_solar_installation" | "smart_thermostat" | "used_electric_vehicle" | "used_plugin_hybrid_vehicle" | "wall_insulation" | "whole_house_fan" | "window_replacement")[];
                };
            };
        };
        APIIncentivesResponse: {
            incentives: {
                id: string;
                items: ("air_sealing" | "air_to_water_heat_pump" | "attic_or_roof_insulation" | "basement_insulation" | "battery_storage_installation" | "central_air_conditioner" | "crawlspace_insulation" | "door_replacement" | "duct_replacement" | "duct_sealing" | "ducted_heat_pump" | "ductless_heat_pump" | "ebike" | "efficiency_rebates" | "electric_outdoor_equipment" | "electric_panel" | "electric_stove" | "electric_thermal_storage_and_slab" | "electric_vehicle_charger" | "electric_wiring" | "energy_audit" | "evaporative_cooler" | "floor_insulation" | "geothermal_heating_installation" | "heat_pump_clothes_dryer" | "heat_pump_water_heater" | "new_electric_vehicle" | "new_plugin_hybrid_vehicle" | "non_heat_pump_clothes_dryer" | "non_heat_pump_water_heater" | "other" | "other_heat_pump" | "other_insulation" | "other_weatherization" | "rooftop_solar_installation" | "smart_thermostat" | "used_electric_vehicle" | "used_plugin_hybrid_vehicle" | "wall_insulation" | "whole_house_fan" | "window_replacement")[];
                short_description: {
                    en: string;
                    es?: string;
                };
                start_date?: string;
                end_date?: string;
                payment_methods: ("rebate" | "pos_rebate" | "tax_credit" | "account_credit" | "assistance_program" | "performance_rebate" | "unknown")[];
                amount: {
                    /** @enum {string} */
                    type: "dollar_amount" | "percent" | "dollars_per_unit";
                    number: number;
                    maximum?: number;
                    minimum?: number;
                    unit?: string;
                };
                owner_status: ("homeowner" | "renter")[];
                /** @description Indicates whether this incentive has income eligibility requirements */
                income_qualified?: boolean;
                program: string;
            }[];
            metadata: {
                total_incentives: number;
                total_states: number;
            };
        };
    };
    responses: never;
    parameters: never;
    requestBodies: never;
    headers: never;
    pathItems: never;
}
export type $defs = Record<string, never>;
export interface operations {
    "calculator-get": {
        parameters: {
            query: {
                /**
                 * @description Your zip code helps determine the amount of discounts and tax credits you qualify for.
                 * @example 80212
                 */
                zip: string;
                /** @description Homeowners and renters qualify for different incentives. */
                owner_status: "homeowner" | "renter";
                /**
                 * @description Enter your gross income (income before taxes). Include wages and salary plus other forms of income, including pensions, interest, dividends, and rental income. If you are married and file jointly, include your spouse’s income.
                 * @example 80000
                 */
                household_income: number;
                /** @description Select "Head of Household" if you have a child or relative living with you, and you pay more than half the costs of your home. Select "Joint" if you file your taxes as a married couple. */
                tax_filing: "hoh" | "joint" | "married_filing_separately" | "single" | "qualifying_widower_with_dependent_child";
                /**
                 * @description Include anyone you live with who you claim as a dependent on your taxes, and your spouse or partner if you file taxes together.
                 * @example 2
                 */
                household_size: number;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Default Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["WebsiteCalculatorResponse"];
                };
            };
            /** @description Default Response */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
            /** @description Default Response */
            404: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    "incentives-get": {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Successful response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        incentives: components["schemas"]["WebsiteIncentive"][];
                    };
                };
            };
        };
    };
    getCalculatedIncentives: {
        parameters: {
            query: {
                /** @description Find incentives that may be available in this ZIP code. Exactly one of this and "address" is required. */
                zip?: string;
                /** @description Find incentives that may be available at this address. Exactly one of this and "zip" is required. */
                address?: string;
                /** @description Find incentives offered by these types of authorities. If absent, incentives from all types of authorities will be considered. */
                authority_types?: ("federal" | "city" | "county" | "state" | "utility" | "gas_utility" | "other")[];
                /** @description The ID of your electric utility company, as returned from `/api/v1/utilities`. Required if authority_types includes "utility". If absent, no incentives offered by electric utilities will be returned. */
                utility?: string;
                /** @description The ID of your gas utility company, as returned from `/api/v1/utilities`, or the special string `none` indicating that you do not have gas service. A value other than `none` is required if authority_types includes "gas_utility". If this parameter is absent or `none`, no incentives offered by gas utilities will be returned. In some jurisdictions, your gas utility can affect your eligibility for incentives offered by other authorities; in such cases, if this parameter is absent, incentives with gas-utility-dependent eligibility will _not_ be returned. */
                gas_utility?: string;
                /** @description Which types of product or service to fetch incentives for. If absent, include incentives for all products and services. Pass multiple values either comma-separated (`items=new_electric_vehicle,used_electric_vehicle`), or as the same GET parameter multiple times (`items=new_electric_vehicle&items=used_electric_vehicle`), or using empty square bracket notation (`items[]=new_electric_vehicle&items[]=used_electric_vehicle`). */
                items?: ("air_sealing" | "air_to_water_heat_pump" | "attic_or_roof_insulation" | "basement_insulation" | "battery_storage_installation" | "central_air_conditioner" | "crawlspace_insulation" | "door_replacement" | "duct_replacement" | "duct_sealing" | "ducted_heat_pump" | "ductless_heat_pump" | "ebike" | "efficiency_rebates" | "electric_outdoor_equipment" | "electric_panel" | "electric_stove" | "electric_thermal_storage_and_slab" | "electric_vehicle_charger" | "electric_wiring" | "energy_audit" | "evaporative_cooler" | "floor_insulation" | "geothermal_heating_installation" | "heat_pump_clothes_dryer" | "heat_pump_water_heater" | "new_electric_vehicle" | "new_plugin_hybrid_vehicle" | "non_heat_pump_clothes_dryer" | "non_heat_pump_water_heater" | "other" | "other_heat_pump" | "other_insulation" | "other_weatherization" | "rooftop_solar_installation" | "smart_thermostat" | "used_electric_vehicle" | "used_plugin_hybrid_vehicle" | "wall_insulation" | "whole_house_fan" | "window_replacement")[];
                /** @description Whether the consumer owns or rents their home. */
                owner_status: "homeowner" | "renter";
                /**
                 * @description The consumer's gross income (pre-tax). Include wages and salary plus other forms of income, including pensions, interest, dividends, and rental income. Married taxpayers filing jointly should include their spouse's income.
                 * @example 80000
                 */
                household_income: number;
                /** @description The status under which the consumer files their federal taxes. */
                tax_filing: "hoh" | "joint" | "married_filing_separately" | "single" | "qualifying_widower_with_dependent_child";
                /**
                 * @description The consumer's household size for tax purposes. Should include anyone the consumer lives with who they claim as a dependent on their taxes, and their spouse if they file taxes jointly.
                 * @example 2
                 */
                household_size: number;
                /** @description Optional choice of language for user-visible strings. */
                language?: "en" | "es";
                /** @description Option to include states which are in development and not fully launched. */
                include_beta_states?: boolean;
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Default Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APICalculatorResponse"];
                };
            };
            /** @description Default Response */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getUtilities: {
        parameters: {
            query?: {
                /** @description Find utilities that may serve this ZIP code. Exactly one of this or "address" is required. */
                zip?: string;
                /** @description Find utilities that may serve this address. Exactly one of this or "zip" is required. */
                address?: string;
                /** @description Optional choice of language for user-visible strings. */
                language?: "en" | "es";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Default Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description The computed location of the request's "zip" or "address" parameter. */
                        location: {
                            /** @description The two-letter abbreviation for the state, district, or territory of the location submitted in the request. */
                            state: string;
                            /** @description The city name as determined by looking up the ZIP code in our database. */
                            city?: string;
                            /** @description The FIPS code of the county, as determined by looking up the ZIP code in our database. */
                            county_fips?: string;
                        };
                        /** @description A map of IDs to info about each electric utility. */
                        utilities: {
                            [key: string]: {
                                /** @description The customer-facing brand name of the utility. This may differ from the name of the utility's legal entity. */
                                name?: string;
                            };
                        };
                        /** @description A map of IDs to info about each gas utility. If absent, that means we have no information on the gas utilities in the given location. Even if present, may be empty if no gas utilities serve the given location. */
                        gas_utilities?: {
                            [key: string]: {
                                /** @description The customer-facing brand name of the utility. This may differ from the name of the utility's legal entity. */
                                name?: string;
                            };
                        };
                        /** @description Whether the user's gas utility may affect the set of incentives they are eligible for. This can be because there are gas utilities that offer incentives we track, or because more complex eligibility rules apply in the user's location. */
                        gas_utility_affects_incentives?: boolean;
                    };
                };
            };
            /** @description Default Response */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getStateStatus: {
        parameters: {
            query?: never;
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Default Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        [key: string]: {
                            /** @enum {string} */
                            status: "launched" | "beta" | "none";
                        };
                    };
                };
            };
            /** @description Default Response */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getProgramsForLocation: {
        parameters: {
            query?: {
                /** @description Find programs that may be available in this ZIP code. Exactly one of this and "address" is required. */
                zip?: string;
                /** @description Find programs that may be available at this address. Exactly one of this and "zip" is required. */
                address?: string;
                /** @description Find programs offered by these types of authorities. If absent, programs from all types of authorities will be considered. */
                authority_types?: ("federal" | "city" | "county" | "state" | "utility" | "gas_utility" | "other")[];
                /** @description The ID of your electric utility company, as returned from `/api/v1/utilities`. Required if authority_types includes "utility". If absent, no programs offered by electric utilities will be returned. */
                utility?: string;
                /** @description The ID of your gas utility company, as returned from `/api/v1/utilities`, or the special string `none` indicating that you do not have gas service. A value other than `none` is required if authority_types includes "gas_utility". If this parameter is absent or `none`, no programs offered by gas utilities will be returned. In some jurisdictions, your gas utility can affect your eligibility for programs offered by other authorities; in such cases, if this parameter is absent, programs with gas-utility-dependent eligibility will _not_ be returned. */
                gas_utility?: string;
                /** @description Optional choice of language for user-visible strings. */
                language?: "en" | "es";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Default Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": {
                        /** @description Information on the entities (government agencies, companies, other organizations) that offer programs in this result set. */
                        authorities: {
                            [key: string]: {
                                name: string;
                                logo?: {
                                    /** @description The URL to fetch the image from. */
                                    src: string;
                                    /** @description The image's width in pixels. */
                                    width: number;
                                    /** @description The image's height in pixels. */
                                    height: number;
                                };
                            };
                        };
                        /** @description Which sub-national sets of incentives were considered for eligibility. */
                        coverage: {
                            /** @description Two-letter state code. Determined from the "location" request parameter. */
                            state: string | null;
                            /** @description Utility ID, as passed in the "utility" request parameter. */
                            utility: string | null;
                        };
                        /** @description The computed location of the request's "zip" or "address" parameter. */
                        location: {
                            /** @description The two-letter abbreviation for the state, district, or territory of the location submitted in the request. */
                            state: string;
                            /** @description The city name as determined by looking up the ZIP code in our database. */
                            city?: string;
                            /** @description The FIPS code of the county, as determined by looking up the ZIP code in our database. */
                            county_fips?: string;
                        };
                        /** @description A map of IDs to incentive program data. */
                        programs: {
                            [key: string]: {
                                /** @description Name of the program */
                                name: string;
                                /** @description URL to program information */
                                url: string;
                                /**
                                 * @description Find programs offered by these types of authorities. If absent, programs from all types of authorities will be considered.
                                 * @enum {string}
                                 */
                                authority_type: "federal" | "city" | "county" | "state" | "utility" | "gas_utility" | "other";
                                /** @description The government agency, company, or organization that offers this program. This generally means the entity that the consumer will interact with to _claim the incentives offered by the program_, as opposed to the entity that sets the program rules, or that provides funding. */
                                authority?: string;
                                /** @description What products or services the program can be used on. **NOTE**: we expect to add possible values to this field over time. Client code should gracefully handle unknown values it sees here. */
                                items?: ("air_sealing" | "air_to_water_heat_pump" | "attic_or_roof_insulation" | "basement_insulation" | "battery_storage_installation" | "central_air_conditioner" | "crawlspace_insulation" | "door_replacement" | "duct_replacement" | "duct_sealing" | "ducted_heat_pump" | "ductless_heat_pump" | "ebike" | "efficiency_rebates" | "electric_outdoor_equipment" | "electric_panel" | "electric_stove" | "electric_thermal_storage_and_slab" | "electric_vehicle_charger" | "electric_wiring" | "energy_audit" | "evaporative_cooler" | "floor_insulation" | "geothermal_heating_installation" | "heat_pump_clothes_dryer" | "heat_pump_water_heater" | "new_electric_vehicle" | "new_plugin_hybrid_vehicle" | "non_heat_pump_clothes_dryer" | "non_heat_pump_water_heater" | "other" | "other_heat_pump" | "other_insulation" | "other_weatherization" | "rooftop_solar_installation" | "smart_thermostat" | "used_electric_vehicle" | "used_plugin_hybrid_vehicle" | "wall_insulation" | "whole_house_fan" | "window_replacement")[];
                            };
                        };
                    };
                };
            };
            /** @description Default Response */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
    getIncentives: {
        parameters: {
            query?: {
                /** @description Find incentives available in this state. If not provided, returns incentives from all states. */
                state?: "AK" | "AL" | "AR" | "AZ" | "CA" | "CO" | "CT" | "DE" | "FL" | "GA" | "HI" | "IA" | "ID" | "IL" | "IN" | "KS" | "KY" | "LA" | "MA" | "MD" | "ME" | "MI" | "MN" | "MO" | "MS" | "MT" | "NC" | "ND" | "NE" | "NH" | "NJ" | "NM" | "NV" | "NY" | "OH" | "OK" | "OR" | "PA" | "RI" | "SC" | "SD" | "TN" | "TX" | "UT" | "VA" | "VT" | "WA" | "WI" | "WV" | "WY" | "DC" | "PR" | "GU" | "MP" | "VI" | "AS";
                /** @description Optional choice of language for user-visible strings. */
                language?: "en" | "es";
            };
            header?: never;
            path?: never;
            cookie?: never;
        };
        requestBody?: never;
        responses: {
            /** @description Default Response */
            200: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["APIIncentivesResponse"];
                };
            };
            /** @description Default Response */
            400: {
                headers: {
                    [name: string]: unknown;
                };
                content: {
                    "application/json": components["schemas"]["Error"];
                };
            };
        };
    };
}
